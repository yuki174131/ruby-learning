# Rubyの変数にはオブジェクトそのものではなく、オブジェクトへの参照が格納されている。
# 変数を他の変数に代入したり、メソッドの引数として渡したりすると、新しい変数やメソッドの引数は元の変数と同じオブジェクトを参照する
a = 'hello'
b = 'hello'
c = b

# 同じオブジェクトかを確認
a.equal?(b) #=> false
b.equal?(c) #=> true

b.upcase!

# 同じオブジェクトなのでcも大文字になる
puts b #=> "HELLO"
puts c #=> "HELLO"

puts a #=> "hello"

# 標準ライブラリやgemを利用する際は明示的にそのライブラリを読み込む必要がある
require 'date'
Date.today

# 自分で作成したRubyプログラムを読み込む場合もrequireを使う。拡張子の.rbは省略できる。
# Rubyを実行しているディレクトリからの相対パス、または絶対パスで指定する

# require_relativeを使うと、自分のファイルが存在するディレクトリがパスの起点になる

# putsメソッド、printメソッド、pメソッドの違い

# 改行を加えて変数の内容や、メソッドの戻り値をターミナルに出力する
puts

# printメソッドは改行を加えず、変数の内容/メソッドの戻り値をターミナルに出力する
print

# pメソッドは、文字列を出力すると、ダブルクオートで囲まれる。また、メソッドで渡されたオブシェくとそのものがメソッドの戻り値となる
p



